name: Gradle Package Snapshot
permissions:
  contents: read
  pull-requests: write
on:
  #release:
  #  types: [ created ]
  # push:
  #   branches:
  #     - main
  # 手动触发部署
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # 运行 JDK 配置
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Gradle 缓存配置
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: "8.10.2"

      - name: Set Gradle Env
        run: |
          echo "storedUsername=${{secrets.STORED_USERNAME}}" > ~/.gradle/gradle.properties
          echo "storedPassword=${{secrets.STORED_PASSWORD}}" >> ~/.gradle/gradle.properties
          echo "signing.keyId=${{secrets.SIGNING_KEYID}}" >> ~/.gradle/gradle.properties
          echo "signing.password=${{secrets.SIGNING_PASSWORD}}" >> ~/.gradle/gradle.properties
          echo "signing.secretKeyRingFile=$(echo ~/.gradle/secring.gpg)" >> ~/.gradle/gradle.properties
          # SONATYPE_TOKEN = storedUsername:storedPassword base64 编码
          SONATYPE_TOKEN=$(echo -n "${{secrets.STORED_USERNAME}}:${{secrets.STORED_PASSWORD}}" | base64)
          echo "SONATYPE_TOKEN=${SONATYPE_TOKEN}" >> $GITHUB_ENV
      # 构建项目
      #- name: Build with Gradle
      #  run: ./gradlew build

      # 将秘钥解码后将文件放置 ~/.gradle/secring.gpg
      - name: Decode
        run: |
          echo "${{secrets.SIGNING_SECRETKEYRINGFILE}}" > ~/.gradle/secring.gpg.b64
          base64 -d ~/.gradle/secring.gpg.b64 > ~/.gradle/secring.gpg

      # 获取版本号
      - name: Get Version
        run: |
          APP_VERSION=$(grep "APP_VERSION" gradle.properties | cut -d'=' -f2)
          echo "获取到版本号: $APP_VERSION"
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV

      # 发布项目
      - name: Build
        run: |
          gradle clean publish -x test
